{
  "swagger": "2.0",
  "info": {
    "description": "Authors Haven - A Social platform for the creative at heart.Create a community of like minded authors to foster inspiration and innovation by leveraging the modern web.",
    "version": "1.0.0",
    "title": "Authors Haven",
    "contact": {
      "email": "fridolinho@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "ah-kgl-avengers-backend.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "user",
      "description": "Everything about your Users"
    },
    {
      "name": "profile",
      "description": "Access to users profile"
    },
    {
      "name": "article",
      "description": "everthing about articles"
    },
    {
      "name": "comment",
      "description": "everthing about comments"
    },
    {
      "name": "tags",
      "description": "tags information"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user login",
        "description": "user login using **email** and **password**",
        "operationId": "loginUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user creadentials.",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged in"
          },
          "404": {
            "description": "wrong email or password"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user registration",
        "description": "Register a **user** using **email**, **username** and **password**",
        "operationId": "registerUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User registration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully registered"
          },
          "404": {
            "description": "wrong email or password"
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get current user",
        "description": "",
        "operationId": "getUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update user",
        "description": "",
        "operationId": "editUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object to be updated to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user updated"
          }
        }
      }
    },
    "/profiles/{username}": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "user profile",
        "description": "retrieve user profile",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "type": "string",
            "description": "Username for the user",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user profile retrieved"
          }
        }
      }
    },
    "/profiles/{username}/follow": {
      "post": {
        "tags": [
          "profile"
        ],
        "summary": "follow user",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "Username for the user",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "follower added"
          }
        }
      },
      "delete": {
        "tags": [
          "profile"
        ],
        "summary": "unfollow user",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "username for user to unfollow",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "unfollow successful"
          }
        }
      }
    },
    "/articles": {
      "get": {
        "tags": [
          "article"
        ],
        "summary": "list of articles",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "article"
        ],
        "summary": "create article",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/articles/feed": {
      "get": {
        "tags": [
          "article"
        ],
        "summary": "articles created by followed users",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/articles/:slug": {
      "get": {
        "tags": [
          "article"
        ],
        "summary": "single article",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "article"
        ],
        "summary": "update article",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "article"
        ],
        "summary": "create article",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/articles/:slug/comment": {
      "post": {
        "tags": [
          "comment"
        ],
        "summary": "post a comment",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "comment"
        ],
        "summary": "get comments for an article",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/articles/:slug/comment:id": {
      "delete": {
        "tags": [
          "comment"
        ],
        "summary": "delete a comment",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/articles/:slug/favorite": {
      "post": {
        "tags": [
          "comment"
        ],
        "summary": "favorite article",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "comment"
        ],
        "summary": "unfavorite article",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/articles/tags": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "favorite article",
        "description": "",
        "operationId": "username",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "description": "User object that needs to be added to the db",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserRegister": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Profile": null,
    "Article": null,
    "Comment": null,
    "Tag": null,
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}